# encoding: utf-8
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module UrlModule
  #
  # Test Infrastructure for AutoRest
  #
  class PathItems

    #
    # Creates and initializes a new instance of the PathItems class.
    # @param client service class for accessing basic functionality.
    #
    def initialize(client)
      @client = client
    end

    # @return [AutoRestUrlTestService] reference to the AutoRestUrlTestService
    attr_reader :client

    #
    # send globalStringPath='globalStringPath',
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery='globalStringQuery',
    # pathItemStringQuery='pathItemStringQuery',
    # localStringQuery='localStringQuery'
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain value 'localStringQuery'
    # @param path_item_string_query [String] A string value 'pathItemStringQuery'
    # that appears as a query parameter
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    #
    def get_all_with_values(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      response = get_all_with_values_async(local_string_path, path_item_string_path, local_string_query, path_item_string_query, custom_headers).value!
      nil
    end

    #
    # send globalStringPath='globalStringPath',
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery='globalStringQuery',
    # pathItemStringQuery='pathItemStringQuery',
    # localStringQuery='localStringQuery'
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain value 'localStringQuery'
    # @param path_item_string_query [String] A string value 'pathItemStringQuery'
    # that appears as a query parameter
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRest::HttpOperationResponse] HTTP response information.
    #
    def get_all_with_values_with_http_info(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      get_all_with_values_async(local_string_path, path_item_string_path, local_string_query, path_item_string_query, custom_headers).value!
    end

    #
    # send globalStringPath='globalStringPath',
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery='globalStringQuery',
    # pathItemStringQuery='pathItemStringQuery',
    # localStringQuery='localStringQuery'
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain value 'localStringQuery'
    # @param path_item_string_query [String] A string value 'pathItemStringQuery'
    # that appears as a query parameter
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def get_all_with_values_async(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      fail ArgumentError, 'local_string_path is nil' if local_string_path.nil?
      fail ArgumentError, 'path_item_string_path is nil' if path_item_string_path.nil?
      fail ArgumentError, '@client.global_string_path is nil' if @client.global_string_path.nil?


      request_headers = {}
      path_template = 'pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/globalStringQuery/pathItemStringQuery/localStringQuery'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'localStringPath' => local_string_path,'pathItemStringPath' => path_item_string_path,'globalStringPath' => @client.global_string_path},
          query_params: {'localStringQuery' => local_string_query,'pathItemStringQuery' => path_item_string_query,'globalStringQuery' => @client.global_string_query},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRest::HttpOperationError.new(result.request, http_response, error_model)
        end


        result
      end

      promise.execute
    end

    #
    # send globalStringPath='globalStringPath',
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery=null, pathItemStringQuery='pathItemStringQuery',
    # localStringQuery='localStringQuery'
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain value 'localStringQuery'
    # @param path_item_string_query [String] A string value 'pathItemStringQuery'
    # that appears as a query parameter
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    #
    def get_global_query_null(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      response = get_global_query_null_async(local_string_path, path_item_string_path, local_string_query, path_item_string_query, custom_headers).value!
      nil
    end

    #
    # send globalStringPath='globalStringPath',
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery=null, pathItemStringQuery='pathItemStringQuery',
    # localStringQuery='localStringQuery'
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain value 'localStringQuery'
    # @param path_item_string_query [String] A string value 'pathItemStringQuery'
    # that appears as a query parameter
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRest::HttpOperationResponse] HTTP response information.
    #
    def get_global_query_null_with_http_info(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      get_global_query_null_async(local_string_path, path_item_string_path, local_string_query, path_item_string_query, custom_headers).value!
    end

    #
    # send globalStringPath='globalStringPath',
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery=null, pathItemStringQuery='pathItemStringQuery',
    # localStringQuery='localStringQuery'
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain value 'localStringQuery'
    # @param path_item_string_query [String] A string value 'pathItemStringQuery'
    # that appears as a query parameter
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def get_global_query_null_async(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      fail ArgumentError, 'local_string_path is nil' if local_string_path.nil?
      fail ArgumentError, 'path_item_string_path is nil' if path_item_string_path.nil?
      fail ArgumentError, '@client.global_string_path is nil' if @client.global_string_path.nil?


      request_headers = {}
      path_template = 'pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/null/pathItemStringQuery/localStringQuery'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'localStringPath' => local_string_path,'pathItemStringPath' => path_item_string_path,'globalStringPath' => @client.global_string_path},
          query_params: {'localStringQuery' => local_string_query,'pathItemStringQuery' => path_item_string_query,'globalStringQuery' => @client.global_string_query},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRest::HttpOperationError.new(result.request, http_response, error_model)
        end


        result
      end

      promise.execute
    end

    #
    # send globalStringPath=globalStringPath,
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery=null, pathItemStringQuery='pathItemStringQuery',
    # localStringQuery=null
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain null value
    # @param path_item_string_query [String] A string value 'pathItemStringQuery'
    # that appears as a query parameter
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    #
    def get_global_and_local_query_null(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      response = get_global_and_local_query_null_async(local_string_path, path_item_string_path, local_string_query, path_item_string_query, custom_headers).value!
      nil
    end

    #
    # send globalStringPath=globalStringPath,
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery=null, pathItemStringQuery='pathItemStringQuery',
    # localStringQuery=null
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain null value
    # @param path_item_string_query [String] A string value 'pathItemStringQuery'
    # that appears as a query parameter
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRest::HttpOperationResponse] HTTP response information.
    #
    def get_global_and_local_query_null_with_http_info(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      get_global_and_local_query_null_async(local_string_path, path_item_string_path, local_string_query, path_item_string_query, custom_headers).value!
    end

    #
    # send globalStringPath=globalStringPath,
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery=null, pathItemStringQuery='pathItemStringQuery',
    # localStringQuery=null
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain null value
    # @param path_item_string_query [String] A string value 'pathItemStringQuery'
    # that appears as a query parameter
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def get_global_and_local_query_null_async(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      fail ArgumentError, 'local_string_path is nil' if local_string_path.nil?
      fail ArgumentError, 'path_item_string_path is nil' if path_item_string_path.nil?
      fail ArgumentError, '@client.global_string_path is nil' if @client.global_string_path.nil?


      request_headers = {}
      path_template = 'pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/null/pathItemStringQuery/null'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'localStringPath' => local_string_path,'pathItemStringPath' => path_item_string_path,'globalStringPath' => @client.global_string_path},
          query_params: {'localStringQuery' => local_string_query,'pathItemStringQuery' => path_item_string_query,'globalStringQuery' => @client.global_string_query},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRest::HttpOperationError.new(result.request, http_response, error_model)
        end


        result
      end

      promise.execute
    end

    #
    # send globalStringPath='globalStringPath',
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery='globalStringQuery', pathItemStringQuery=null,
    # localStringQuery=null
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain value null
    # @param path_item_string_query [String] should contain value null
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    #
    def get_local_path_item_query_null(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      response = get_local_path_item_query_null_async(local_string_path, path_item_string_path, local_string_query, path_item_string_query, custom_headers).value!
      nil
    end

    #
    # send globalStringPath='globalStringPath',
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery='globalStringQuery', pathItemStringQuery=null,
    # localStringQuery=null
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain value null
    # @param path_item_string_query [String] should contain value null
    # @param custom_headers [Hash{String => String}] A hash of custom headers that
    # will be added to the HTTP request.
    #
    # @return [MsRest::HttpOperationResponse] HTTP response information.
    #
    def get_local_path_item_query_null_with_http_info(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      get_local_path_item_query_null_async(local_string_path, path_item_string_path, local_string_query, path_item_string_query, custom_headers).value!
    end

    #
    # send globalStringPath='globalStringPath',
    # pathItemStringPath='pathItemStringPath', localStringPath='localStringPath',
    # globalStringQuery='globalStringQuery', pathItemStringQuery=null,
    # localStringQuery=null
    #
    # @param local_string_path [String] should contain value 'localStringPath'
    # @param path_item_string_path [String] A string value 'pathItemStringPath'
    # that appears in the path
    # @param local_string_query [String] should contain value null
    # @param path_item_string_query [String] should contain value null
    # @param [Hash{String => String}] A hash of custom headers that will be added
    # to the HTTP request.
    #
    # @return [Concurrent::Promise] Promise object which holds the HTTP response.
    #
    def get_local_path_item_query_null_async(local_string_path, path_item_string_path, local_string_query = nil, path_item_string_query = nil, custom_headers = nil)
      fail ArgumentError, 'local_string_path is nil' if local_string_path.nil?
      fail ArgumentError, 'path_item_string_path is nil' if path_item_string_path.nil?
      fail ArgumentError, '@client.global_string_path is nil' if @client.global_string_path.nil?


      request_headers = {}
      path_template = 'pathitem/nullable/globalStringPath/{globalStringPath}/pathItemStringPath/{pathItemStringPath}/localStringPath/{localStringPath}/globalStringQuery/null/null'

      request_url = @base_url || @client.base_url

      options = {
          middlewares: [[MsRest::RetryPolicyMiddleware, times: 3, retry: 0.02], [:cookie_jar]],
          path_params: {'localStringPath' => local_string_path,'pathItemStringPath' => path_item_string_path,'globalStringPath' => @client.global_string_path},
          query_params: {'localStringQuery' => local_string_query,'pathItemStringQuery' => path_item_string_query,'globalStringQuery' => @client.global_string_query},
          headers: request_headers.merge(custom_headers || {}),
          base_url: request_url
      }
      promise = @client.make_request_async(:get, path_template, options)

      promise = promise.then do |result|
        http_response = result.response
        status_code = http_response.status
        response_content = http_response.body
        unless status_code == 200
          error_model = JSON.load(response_content)
          fail MsRest::HttpOperationError.new(result.request, http_response, error_model)
        end


        result
      end

      promise.execute
    end

  end
end
