# encoding: utf-8
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module ComplexModule
  module Models
    #
    # Model object.
    #
    #
    class Fish
      @@discriminatorMap = Hash.new
      @@discriminatorMap["salmon"] = "Salmon"
      @@discriminatorMap["shark"] = "Shark"
      @@discriminatorMap["sawshark"] = "Sawshark"
      @@discriminatorMap["goblin"] = "Goblinshark"
      @@discriminatorMap["cookiecuttershark"] = "Cookiecuttershark"

      def initialize
        @fishtype = "Fish"
      end

      attr_accessor :fishtype

      # @return [String]
      attr_accessor :species

      # @return [Float]
      attr_accessor :length

      # @return [Array<Fish>]
      attr_accessor :siblings


      #
      # Mapper for Fish class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'Fish',
          type: {
            name: 'Composite',
            polymorphic_discriminator: 'fishtype',
            uber_parent: 'Fish',
            class_name: 'Fish',
            model_properties: {
              species: {
                required: false,
                serialized_name: 'species',
                type: {
                  name: 'String'
                }
              },
              length: {
                required: true,
                serialized_name: 'length',
                type: {
                  name: 'Double'
                }
              },
              siblings: {
                required: false,
                serialized_name: 'siblings',
                type: {
                  name: 'Sequence',
                  element: {
                      required: false,
                      serialized_name: 'FishElementType',
                      type: {
                        name: 'Composite',
                        polymorphic_discriminator: 'fishtype',
                        uber_parent: 'Fish',
                        class_name: 'Fish'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
